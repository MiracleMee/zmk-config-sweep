//Robs sweep theFirst
//╭─────────────────────╮╭─────────────────────╮
//| Q   W   F   P   B   ||  J   L   U   Z  shft|
//| A   R   S   T   G   ||  M   N   E   I   O  |
//| Y   X   C   D   V   ||  K   H   ,   .   /  |
//╰─────────────────────╯╰─────────────────────╯
//          | tab enter || spc  bspc |
//          ╰───────────┴┴───────────╯
//╭─────────────────────╮╭─────────────────────╮
//| \   ""  {   }   <   || :   :   up  tr   ^  |
//| #   ;   (   )   =   || @   lft dwn rght |  |
//| _   ''  [   ]   >   || &    $   €   ~   %  |
//╰─────────────────────╯╰─────────────────────╯
//          |  tr  esc  ||  tr   tr  |
//          ╰───────────┴┴───────────╯
//╭─────────────────────╮╭─────────────────────╮
//| esc ctY ctZ ctS tr  ||  !   7   8   9   +  |
//| sft ctA ctC ctV stlt||  0   4   5   6   -  |
//| tr  tr  tr  tr  tr  ||  ?   1   2   3   *  |
//╰─────────────────────╯╰─────────────────────╯
//          |  tr   tr  || shft  win |
//          ╰───────────┴┴───────────╯
//╭─────────────────────╮╭─────────────────────╮
//| rst tr  tr  tr  bt0 || bt3 tr  tr  tr  rst |
//|boot tr  tr  tr  bt1 || bt4 tr  tr  tr  boot|
//| tr  tr  tr  clr bt2 || tr  tr  tr  tr  tr  |
//╰─────────────────────╯╰─────────────────────╯
//          |  tr   tr  ||  tr   tr  |
//          ╰───────────┴┴───────────╯
//╭─────────────────────╮╭─────────────────────╮
//| tr  tr  tr  tr  tr  || tr  tr  tr  tr  tr  |
//| ch  sch tr gmx fsnw || tr  ä   ö   ü   ß   |
//| tr  tr  tr  tr  tr  || tr  tr  tr  tr  tr  |
//╰─────────────────────╯╰─────────────────────╯
//          |  tr   tr  ||  tr   tr  |
//          ╰───────────┴┴───────────╯

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_de.h"

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {

//Macros______________________________________________________________________________________
    macros {
        schM: macro_0 {
            label = "macro_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_S &kp DE_C &kp DE_H>;
        };
        chM: macro_1 {
            label = "macro_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_C &kp DE_H>;
        };
        gmxMailM: macro_2 {
            label = "macro_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_R &kp DE_O &kp DE_B &kp DE_I &kp DE_N &kp DE_PERIOD &kp DE_W &kp DE_U &kp DE_N &kp DE_D &kp DE_E &kp DE_R &kp DE_L &kp DE_I &kp DE_C &kp DE_H &kp DE_AT_SIGN &kp DE_G &kp DE_M &kp DE_X &kp DE_PERIOD &kp DE_N &kp DE_E &kp DE_T>;
        };
        fsnwMailM: macro_3 {
            label = "macro_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_R &kp DE_O &kp DE_B &kp DE_I &kp DE_N &kp DE_PERIOD &kp DE_W &kp DE_U &kp DE_N &kp DE_D &kp DE_E &kp DE_R &kp DE_L &kp DE_I &kp DE_C &kp DE_H &kp DE_AT_SIGN &kp DE_F &kp DE_S &kp DE_N &kp DE_W &kp DE_PERIOD &kp DE_D &kp DE_E>;
        };
    };

//Behaviors___________________________________________________________________________________
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

//Tap-Dances___________________________________________________________________________________
        ae: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DE_A>, <&kp DE_A_UMLAUT>;
        };

        oe: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DE_O>, <&kp DE_O_UMLAUT>;
        };

        ue: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DE_U>, <&kp DE_U_UMLAUT>;
        };

        ss: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DE_Z>, <&kp DE_SHARP_S>;
        };

        sch: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DE_S>, <&schM>;
        };
        
    };

//Conditional Layers____________________________________________________________________________
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

//Keymaps_______________________________________________________________________________________
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭─────────────────────╮╭─────────────────────╮
        //| Q   W   F   P   B   ||  J   L   U   Z  shft|
        //| A   R   S   T   G   ||  M   N   E   I   O  |
        //| Y   X   C   D   V   ||  K   H   ,   .   /  |
        //╰─────────────────────╯╰─────────────────────╯
        //          | tab enter || spc  bspc |
        //          ╰───────────┴┴───────────╯

        &kp DE_Q    &kp DE_W    &kp DE_F     &kp DE_P &kp DE_B    &kp DE_J      &kp DE_L    &kp DE_U       &kp DE_Z        &sk LSHIFT
        &kp DE_A    &kp DE_R    &kp DE_S     &kp DE_T &kp DE_G    &kp DE_M      &kp DE_N    &kp DE_E       &kp DE_I        &kp DE_O
        &kp DE_Y    &kp DE_X    &kp DE_C     &kp DE_D &kp DE_V    &kp DE_K      &kp DE_H    &kp DE_COMMA   &kp DE_PERIOD   &kp DE_SLASH
        &lt 4 TAB   &lt 2 ENTER &lt 1 SPACE  &kp BSPC
            >;
        };

        
        right_layer {
            bindings = <
        //╭─────────────────────╮╭─────────────────────╮
        //| \   ""  {   }   <   || :   :   up  tr   ^  |
        //| #   ;   (   )   =   || @   lft dwn rght |  |
        //| _   ''  [   ]   >   || &    $   €   ~   %  |
        //╰─────────────────────╯╰─────────────────────╯
        //          |  tr  esc  ||  tr   tr  |
        //          ╰───────────┴┴───────────╯

        &kp DE_BACKSLASH    &kp DE_DOUBLE_QUOTES    &kp DE_LEFT_BRACE       &kp DE_RIGHT_BRACE          &kp DE_LESS_THAN        &kp E_COLON         &E_COLON        &kp UARW     &trans       &kp DE_CARET
        &kp DE_HASH         &kp DE_SEMICOLON        &kp DE_LEFT_PARENTHESIS &kp DE_RIGHT_PARENTHESIS    &kp DE_EQUAL            &kp DE_AT_SIGN      &kp LARW        &kp DARW     &kp RARW     &kp DE_PIPE
        &kp DE_UNDERSCORE   &kp DE_SINGLE_QUOTE     &kp DE_LEFT_BRACKET     &kp DE_RIGHT_BRACKET        &kp DE_GREATER_THAN     &kp DE_AMPERSAND    &kp DE_DOLLAR   &kp DE_EURO  &kp DE_TILDE &kp DE_PERCENT
        &trans              &kp ESC                 &trans                  &trans
            >;
        };


        left_layer {
            bindings = <
        //╭─────────────────────╮╭─────────────────────╮
        //| esc ctY ctZ ctS tr  ||  !   7   8   9   +  |
        //| sft ctA ctC ctV stlt||  0   4   5   6   -  |
        //| tr  tr  tr  tr  tr  ||  ?   1   2   3   *  |
        //╰─────────────────────╯╰─────────────────────╯
        //          |  tr   tr  || shft  win |
        //          ╰───────────┴┴───────────╯

        &kp ESCAPE     &kp LC(DE_Y)    &kp LC(DE_Z)       &kp LC(DE_S)   &trans              &kp DE_EXCLAMATION  &kp DE_N7   &kp DE_N8   &kp DE_N9   &kp DE_PLUS
        &sk LSHIFT     &kp LC(DE_A)    &kp LC(DE_C)       &kp LC(DE_V)   &kp LC(LALT)        &kp DE_N0           &kp DE_N4   &kp DE_N5   &kp DE_N6   &kp DE_MINUS
        &trans         &trans          &trans             &trans         &trans              &kp DE_QUESTION     &kp DE_N1   &kp DE_N2   &kp DE_N3   &kp DE_ASTERISK
        &trans         &trans          &sk LSHIFT         &sk LWIN
            >;
        };


        tri_layer {
            bindings = <
        //╭─────────────────────╮╭─────────────────────╮
        //| rst tr  tr  tr  bt0 || bt3 tr  tr  tr  rst |
        //|boot tr  tr  tr  bt1 || bt4 tr  tr  tr  boot|
        //| tr  tr  tr  clr bt2 || tr  tr  tr  tr  tr  |
        //╰─────────────────────╯╰─────────────────────╯
        //          |  tr   tr  ||  tr   tr  |
        //          ╰───────────┴┴───────────╯
        
        &sys_reset  &trans     &trans     &trans        &bt BT_SEL 0          &bt BT_SEL 3    &trans     &trans     &trans    &sys_reset
        &bootloader &trans     &trans     &trans        &bt BT_SEL 1          &bt BT_SEL 4    &trans     &trans     &trans    &bootloader
        &trans      &trans     &trans     &bt BT_CLR    &bt BT_SEL 2          &trans          &trans     &trans     &trans    &trans
        &trans      &trans     &trans     &trans
            >;
        };

        misc_layer {
            bindings = <
        //╭─────────────────────╮╭─────────────────────╮
        //| tr  tr  tr  tr  tr  || tr  tr  tr  tr  tr  |
        //| ch  sch tr gmx fsnw || tr  ä   ö   ü   ß   |
        //| tr  tr  tr  tr  tr  || tr  tr  tr  tr  tr  |
        //╰─────────────────────╯╰─────────────────────╯
        //          |  tr   tr  ||  tr   tr  |
        //          ╰───────────┴┴───────────╯
        
        &trans      &trans     &trans     &trans        &trans          &trans    &trans              &trans            &trans             &trans
        &chM        &schM      &gmxMailM  &fsnwMailM    &trans          &trans    &kp DE_A_UMLAUT     &kp DE_O_UMLAUT   &kp DE_U_UMLAUT    &kp DE_SHARP_S
        &trans      &trans     &trans     &trans        &trans          &trans    &trans              &trans            &trans             &trans
        &trans      &trans     &trans     &trans
            >;
        };
    };
};
